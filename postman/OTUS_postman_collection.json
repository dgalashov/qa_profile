{
	"info": {
		"_postman_id": "2d710f88-7fb1-463f-b19e-73a0fe478a35",
		"name": "OTUS_http",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24375306"
	},
	"item": [
		{
			"name": "Vikunja",
			"item": [
				{
					"name": "POST authorization",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"let Body = pm.response.json()\r",
									"console.log(Body.token)\r",
									"pm.collectionVariables.set(\"Token\", Body.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"username\":\"demo\",\"password\":\"demo\",\"long_token\":false}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{V_url}}/login",
							"host": [
								"{{V_url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT new_task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"title\":\"Set up application\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{V_url}}/lists/6",
							"host": [
								"{{V_url}}"
							],
							"path": [
								"lists",
								"6"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT duplicate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"max_right\":null,\"list_id\":\"6\",\"namespace_id\":1,\"list\":null}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{V_url}}/lists/6/duplicate",
							"host": [
								"{{V_url}}"
							],
							"path": [
								"lists",
								"6",
								"duplicate"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT label",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"max_right\":null,\"id\":0,\"title\":\"Major_task\",\"hex_color\":\"800040\",\"description\":\"\",\"created_by\":{\"max_right\":null,\"id\":0,\"email\":\"\",\"username\":\"\",\"name\":\"\",\"exp\":0,\"type\":0,\"created\":null,\"updated\":null,\"settings\":{\"max_right\":null,\"name\":\"\",\"email_reminders_enabled\":true,\"discoverable_by_name\":false,\"discoverable_by_email\":false,\"overdue_tasks_reminders_enabled\":true,\"week_start\":0,\"timezone\":\"\",\"language\":\"ru-RU\"}},\"list_id\":0,\"text_color\":\"#4a4a4a\",\"created\":\"1970-01-01T03:00:00+03:00\",\"updated\":\"1970-01-01T03:00:00+03:00\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{V_url}}/labels?id=7",
							"host": [
								"{{V_url}}"
							],
							"path": [
								"labels"
							],
							"query": [
								{
									"key": "id",
									"value": "7"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET labels",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{V_url}}/labels?page=1",
							"host": [
								"{{V_url}}"
							],
							"path": [
								"labels"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET teams",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{V_url}}/teams",
							"host": [
								"{{V_url}}"
							],
							"path": [
								"teams"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET my list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{V_url}}/lists/7",
							"host": [
								"{{V_url}}"
							],
							"path": [
								"lists",
								"7"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "The 1st POST challenger",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"let X_Challenger = pm.response.headers.get(\"X-Challenger\")\r",
							"console.log(X_Challenger)\r",
							"pm.collectionVariables.set(\"response_challenger\", X_Challenger);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{URL}}/challenger",
					"host": [
						"{{URL}}"
					],
					"path": [
						"challenger"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /challenges",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{response_challenger}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/challenges",
					"host": [
						"{{URL}}"
					],
					"path": [
						"challenges"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /todos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{response_challenger}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/todos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /todo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{response_challenger}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/todo",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todo"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /todos/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{response_challenger}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/todos/241",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos",
						"241"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /todos/{id} 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{response_challenger}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/todos/23300022",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos",
						"23300022"
					]
				}
			},
			"response": []
		},
		{
			"name": "HEAD /todos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "HEAD",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{response_challenger}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/todos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST  /todos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{response_challenger}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": " {\r\n            \"title\": \"set up application\",\r\n            \"doneStatus\": true,\r\n            \"description\": \"\"\r\n        }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/todos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET  /todos ?filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{response_challenger}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/todos?doneStatus=true",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					],
					"query": [
						{
							"key": "doneStatus",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "POST  /todos 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{response_challenger}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": " {\r\n            \"title\": \"set up monitor\",\r\n            \"doneStatus\": truth,\r\n            \"description\": \"\"\r\n        }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/todos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST  /todos/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{response_challenger}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": " {\r\n            \"title\": \"set up monitor\",\r\n            \"doneStatus\": true,\r\n            \"description\": \"\"\r\n        }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/todos/263",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos",
						"263"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE  /todos/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "X-Challenger",
						"value": "{{response_challenger}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/todos/263",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos",
						"263"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "response_challenger",
			"value": "",
			"type": "string"
		},
		{
			"key": "URL",
			"value": "",
			"type": "string"
		},
		{
			"key": "Token",
			"value": ""
		},
		{
			"key": "V_url",
			"value": "",
			"type": "string"
		}
	]
}